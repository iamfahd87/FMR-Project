@model Family_Medical_Record.Models.Patient

@{
    ViewBag.Title = Model.FirstName + " " + Model.LastName;
}

<div class=" form-grids row form-grids-right">
    <div class="widget-shadow " data-example-id="basic-forms">
        <div class="form-title">
            <h4>Edit @ViewBag.Title</h4>
        </div>
        <div class="form-body">
            @using (Html.BeginForm("Edit", "Patients", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PatientId)
                @Html.HiddenFor(model => model.Guardian)
                @Html.HiddenFor(model => model.Picture)

                <div class="avatar-upload">
                    <div class="avatar-edit">
                        <input type='file' id="imageUpload" name="imageUpload" accept=".png, .jpg, .jpeg" />
                        <label for="imageUpload"></label>
                    </div>
                    <div class="avatar-preview">
                        <div id="imagePreview" style="background-image: url('@Model.Picture');">
                        </div>
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        <input type="date" id="DOB" name="DOB" class="form-control" value="@Model.DOB.Date.ToString("yyyy-MM-dd")" max="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.AddYears(-100).ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.Gender, new SelectList(new string[] { "N/A", "Male", "Female" }, Model.Gender), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.BloodGroup, new SelectList(new string[] { "N/A", "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }, Model.BloodGroup), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @type = "number", @min = "0", @step = "0.1", @value = Model.Height, @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @type = "number", @min = "0", @step = "0.1", @value = Model.Weight, @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-2">
                        <input type="submit" value="Save Changes" class="btn btn-primary btn-style" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
